Fuzzy Matching


INTRODUÇÃO

Quando precisamos realizar um processo de correspondência entre objetos iguais, mas que estão dispostos em fontes diferentes, em um
mundo ideal é que tenha um código único para cada objeto. Entretanto, no mundo real nem sempre isso acontece e muitas vezes nem 
código de idenficação (ID) tem. O que nós resta é tentar fazer a correspondência pelo nome do objeto e é ai que os problemas começam
a aparecer, os nomes podem vir com algum erro de digitação (principalmente, quando é um usuário que o insere), com abreviações, com ou
sem acento ou até mesmo com alguma grafia diferente.

Uma solução para este problema é o conceito de Fuzzy Matching, em uma tradução livre Correspondência Difusa. O processo consiste em
realizar a limpeza do nome, retirando os acentos, os caracteres especiais e os possíveis excessos de espaço. Tal tarefa pode ser rea-
lizada tanto na programação com R e Python, que tem bibliotecas específicas para isso, por exemplo: a fedmatch no R (depois colocar 
a biblioteca correspondente em Python). Posteriormente, é a etapa para seguir o conceito do Fuzzy Matching que, basicamente, é de calcu-
lar a "distancia" númerica entre cada comparação de string em potencial e, em seguida, para cada string do conjunto de dados correto,
depois escolher a string "mais próxima".


****Links****
https://www.statology.org/fuzzy-matching-in-r/#:~:text=Often%20you%20may%20want%20to,function%20from%20the%20fuzzyjoin%20package
https://cran.r-project.org/web/packages/fedmatch/vignettes/Fuzzy-matching.html
https://statisticsglobe.com/fuzzy-matching-r
https://cran.r-project.org/web/packages/fedmatch/vignettes/Using-clean-strings.html
https://cran.r-project.org/web/packages/fedmatch/vignettes/Intro-to-fedmatch.html
https://www.geeksforgeeks.org/fuzzywuzzy-python-library/#:~:text=FuzzyWuzzy%20is%20a%20library%20of,calculate%20the%20differences%20between%20sequences.